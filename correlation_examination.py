import matplotlib.pyplot as plt
import numpy as  np
from scipy.stats import pearsonr, spearmanr
import statsmodels.api as sm
from statsmodels.nonparametric.smoothers_lowess import lowess

data = [
    ['8.sql', 10, 1433.2976666666666],
    ['12.sql', 5, 805.1730000000001],
    ['15.sql', 8, 694.5573333333332],
    ['19.sql', 2, 68.09866666666666],
    ['11.sql', 7, 9.927000000000001],
    ['20.sql', 7, 480.4876666666667],
    ['10.sql', 11, 869.868],
    ['17.sql', 1, 42.72700000000001],
    ['9.sql', 10, 1402.4036666666664],
    ['14.sql', 2, 131.336],
    ['7.sql', 2, 728.2686666666667],
    ['6.sql', 3, 264.3193333333333],
    ['1.sql', 2, 3349.6176666666665],
    ['3.sql', 2, 461.63433333333336],
    ['5.sql', 0, 89.88900000000001],
    ['13.sql', 3, 461.2956666666666],
    ['18.sql', 9, 129.82933333333335],
    ['4.sql', 0, 0.013666666666666666],
    ['2.sql', 6, 70.25266666666668],
    ['22.sql', 4, 56.42733333333333],
    ['21.sql', 4, 734.7539999999999],
    ['16.sql', 1, 332.9886666666667],
    ['18c.sql', 5, 5270.134000000001],
    ['30b.sql', 0, 21.50666666666666],
    ['26c.sql', 4, 48739.48499999999],
    ['6e.sql', 0, 3.9036666666666666],
    ['18b.sql', 4, 488.86466666666666],
    ['26b.sql', 3, 1151.2683333333334],
    ['16c.sql', 0, 61.38133333333334],
    ['23a.sql', 2, 1.9096666666666806],
    ['20c.sql', 1, 34085.414],
    ['4c.sql', 5, 1337.8463333333334],
    ['29c.sql', 13, 806.9446666666666],
    ['1d.sql', 5, 56.87800000000001],
    ['1a.sql', 7, 49.221000000000004],
    ['13a.sql', 4, 1353.9686666666666],
    ['6a.sql', 0, 3.9949999999999997],
    ['17c.sql', 2, 365.4833333333336],
    ['27c.sql', 10, 1.6353333333333329],
    ['30a.sql', 0, 57.33933333333331],
    ['21b.sql', 4, 7.707000000000001],
    ['19d.sql', 7, 7861.988333333335],
    ['6d.sql', 0, 309.8769999999998],
    ['3b.sql', 2, 1203.5033333333333],
    ['4a.sql', 5, 786.378],
    ['11b.sql', 3, 39.88333333333333],
    ['27b.sql', 10, 58.876666666666665],
    ['12a.sql', 7, 153.41866666666667],
    ['3c.sql', 10, 2935.941666666667],
    ['22d.sql', 0, 542.3516666666667],
    ['32b.sql', 2, 14.108666666666656],
    ['27a.sql', 9, 62.242],
    ['8c.sql', 13, 8836.404666666665],
    ['25b.sql', 5, 358.8586666666667],
    ['17f.sql', 0, 283.9669999999999],
    ['2c.sql', 0, 32.09100000000001],
    ['32a.sql', 2, 3.1970000000000005],
    ['7c.sql', 7, 7093.459999999999],
    ['13c.sql', 8, 380.3766666666667],
    ['26a.sql', 2, 6517.069],
    ['17b.sql', 2, 365.40733333333355],
    ['10a.sql', 5, 491.1483333333333],
    ['8b.sql', 6, 186.73166666666665],
    ['30c.sql', 0, 319.7163333333331],
    ['6b.sql', 0, 11.819666666666668],
    ['33b.sql', 9, 79.05366666666667],
    ['15c.sql', 21, 3993.3216666666667],
    ['16a.sql', 0, 6.332000000000003],
    ['29b.sql', 9, 28628.20466666667],
    ['21c.sql', 4, 5.306333333333334],
    ['12c.sql', 4, 812.7040000000001],
    ['5b.sql', 5, 182.13899999999998],
    ['22b.sql', 0, 32.04266666666666],
    ['18a.sql', 11, 3965.1373333333336],
    ['23c.sql', 2, 19.011666666666667],
    ['16d.sql', 0, 54.45566666666665],
    ['10c.sql', 16, 2654.9856666666665],
    ['17e.sql', 0, 291.3453333333334],
    ['33c.sql', 9, 67.46233333333333],
    ['31a.sql', 7, 9701.079333333333],
    ['11c.sql', 9, 24.22599999999999],
    ['3a.sql', 10, 5223.266333333333],
    ['16b.sql', 0, 457.91866666666647],
    ['20b.sql', 1, 32509.98833333333],
    ['28b.sql', 3, 1617.4080000000001],
    ['9a.sql', 4, 3422.72],
    ['8a.sql', 4, 1622.0976666666668],
    ['28c.sql', 3, 162.90033333333335],
    ['11a.sql', 5, 10.819999999999999],
    ['1b.sql', 5, 52.226],
    ['14c.sql', 0, 136.305],
    ['28a.sql', 5, 997.4480000000002],
    ['20a.sql', 1, 82105.22000000002],
    ['24a.sql', 6, 36.75666666666666],
    ['12b.sql', 11, 51.39433333333333],
    ['17a.sql', 0, 119.87700000000041],
    ['2b.sql', 0, 31.79133333333334],
    ['23b.sql', 2, 8.249666666666675],
    ['19a.sql', 7, 1404.535],
    ['14b.sql', 5, 10.609999999999994],
    ['19c.sql', 7, 422.6180000000001],
    ['17d.sql', 2, 380.08900000000057],
    ['1c.sql', 7, 54.75266666666667],
    ['10b.sql', 2, 334.637],
    ['9b.sql', 4, 1853.3633333333335],
    ['2d.sql', 0, 74.34933333333333],
    ['9d.sql', 2, 4309.7266666666665],
    ['13d.sql', 7, 1323.6693333333333],
    ['21a.sql', 5, 54.175666666666665],
    ['15b.sql', 8, 8.914333333333332],
    ['22a.sql', 0, 96.14766666666667],
    ['8d.sql', 13, 3838.437],
    ['9c.sql', 5, 3616.601666666667],
    ['19b.sql', 15, 1799.3073333333332],
    ['25a.sql', 7, 684.5513333333333],
    ['4b.sql', 4, 51.60333333333333],
    ['31b.sql', 5, 587.9703333333333],
    ['15a.sql', 14, 1151.8393333333333],
    ['13b.sql', 8, 424.90900000000005],
    ['25c.sql', 9, 3868.6379999999995],
    ['29a.sql', 12, 2201.393666666667],
    ['2a.sql', 0, 42.436666666666646],
    ['22c.sql', 0, 759.685],
    ['11d.sql', 7, 33.98866666666667],
    ['6c.sql', 0, 4.626333333333334],
    ['6f.sql', 0, 262.84066666666666],
    ['15d.sql', 21, 2888.3393333333333],
    ['7a.sql', 3, 54.3523333333333],
    ['31c.sql', 8, 8736.175000000001],
    ['5a.sql', 2, 176.13],
    ['33a.sql', 10, 10.935333333333332],
    ['7b.sql', 3, 12.017666666666656],
    ['14a.sql', 0, 34.941999999999986],
    ['24b.sql', 8, 2.449666666666667],
    ['5c.sql', 5, 220.61266666666666]
]

xs = [d[1] for d in data]
ys = [d[2] for d in data]

# Remove outliers
xs = np.array(xs)
ys = np.array(ys)
mean_x = np.mean(xs)
mean_y = np.mean(ys)
std_x = np.std(xs)
std_y = np.std(ys)

xxs = []
yys = []
for i in range(len(ys)):
    if np.abs(ys[i] - mean_y) < 2 * std_y:
        xxs.append(xs[i])
        yys.append(ys[i])

xs = np.array(xxs)
ys = np.array(yys)

# Calculate Pearson's correlation
pearson_corr, _ = pearsonr(xs, ys)
print('Pearsons correlation: %.3f' % pearson_corr)

# Calculate Spearman's correlation
spearman_corr, _ = spearmanr(xs, ys)
print('Spearman correlation: %.3f' % spearman_corr)

# Linear Regression Analysis
X = sm.add_constant(xs)
model = sm.OLS(ys, X).fit()
print(f"Linear Regression: {model.summary()}")

# Line of best fit
m, b = np.polyfit(xs, ys, 1)

# LOWESS curve
lowess_curve = lowess(ys, xs, frac=0.3)

# Plotting
plt.figure(figsize=(10, 6))
plt.scatter(xs, ys, label='Data Points')
plt.plot(xs, m*xs + b, color='red', label='Line of Best Fit')
plt.plot(lowess_curve[:, 0], lowess_curve[:, 1], color='green', label='LOWESS Curve')
plt.xlabel("Tree Edit Distance")
plt.ylabel("Time Execution Difference (ms)")
plt.legend()
plt.savefig("BestFitLine_2.png")
plt.show()